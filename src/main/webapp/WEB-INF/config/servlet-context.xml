<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns='http://www.springframework.org/schema/beans'
	xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
	xmlns:context='http://www.springframework.org/schema/context'
	xmlns:aop='http://www.springframework.org/schema/aop'
	xmlns:mvc='http://www.springframework.org/schema/mvc'
	xsi:schemaLocation='http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc.xsd'>

	<!-- 스캔할 패키지 내부의 클래스 중 Controller 어노테이션이 설정되어 있는 클래스들을 -->
	<!-- 컨트롤러로 로딩한다 -->
	<mvc:annotation-driven/>
	
	<!-- 스캔할 bean들이 모여있는 패키지를 지정한다 -->
	<context:component-scan base-package="com.test.beans"/>
	<context:component-scan base-package="com.test.controller"/>
	<context:component-scan base-package="com.test.db"/>
	<context:component-scan base-package="com.test.service"/>
	
	<!-- Controller의 메서드가 반환하는 문자열 앞에 prefix 부분을 붙이고 -->
	<!-- 문자열 뒤에 suffix부분을 붙여서 사용할 jsp의 경로를 완성한다 -->
	<!-- 이 jsp파일을 통해 응답 결과를 생성하여 브라우저로 전달한다 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 정적 파일(이미지, 사운드, 동영상, JS, CSS 등)이 있는 경로 -->
	<mvc:resources location="/WEB-INF/resources/" mapping="/**"/>
	
	<!-- properties 파일의 내용을 사용할 수 있도록 Bean을 정의한다 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="Locations">
			<list>
				<value>/WEB-INF/properties/options.properties</value>
				<value>/WEB-INF/properties/db.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 데이터 베이스 접속 정보 -->
	<bean class="org.apache.commons.dbcp2.BasicDataSource" id='data_source'>
		<property name="driverClassName" value='${db.classname}'/>
		<property name="url" value='${db.url}'/>
		<property name="username" value='${db.username}'/>
		<property name="password" value='${db.password}'/>
	</bean>
	
	<!-- mapper 파일 위치 등록 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id='sqlSession'>
		<property name="dataSource" ref='data_source'/>
		<property name="mapperLocations" value='/WEB-INF/mapper/*.xml'/>
	</bean>
	
	<!-- 개발자가 주입 받아 사용할 bean -->
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSessionTemplate">
		<constructor-arg ref='sqlSession'/>
	</bean>
			
	<!-- 파일 업로드 처리를 해주는 bean -->
	<!-- 파일 업로드 처리를 위해 설정해야 하는 값들을 properties에 설정해야 한다 -->
	<!-- 본 예제에서는 options.properties를 사용한다 -->
	<!-- 현재 파일 상단에 있는 properties 파일을 등록하는 곳에 등록해줘야 한다 -->
	<!-- web.xml에 필터를 설정한다 -->
	<!-- web.xml에 업로드 관련 설정을 해준다(multipart-config) -->
	<!-- 글 작성 jsp에서 file input 태그의 이름을 변경해주고 -->
	<!-- 이를 받을 bean 클래스에 MultipartFile 타입으로 정의해준다 -->
	<bean class="org.springframework.web.multipart.support.StandardServletMultipartResolver" id='multipartResolver'/>
	
	<!-- interceptor 등록 -->
	<mvc:interceptors>
		<!-- 상단 메뉴를 위한 인터셉터 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.test.interceptor.TopMenuInterceptor"/>			
		</mvc:interceptor>
		
		<!-- 로그인 확인 여부를 위한 인터셉터 -->
		<mvc:interceptor>
			<mvc:mapping path="/user_modify"/>
			<mvc:mapping path="/user_modify_pro"/>
			<mvc:mapping path="/user_logout"/>
			<mvc:mapping path="/board_write"/>
			<mvc:mapping path="/board_write_pro"/>
			<mvc:mapping path="/board_read"/>
			<mvc:mapping path="/board_delete"/>
			<mvc:mapping path="/board_modify"/>
			<mvc:mapping path="/membership_photo"/>
			<mvc:mapping path="/cart"/>
			<bean class="com.test.interceptor.LoginCheckInterceptor"/>
		</mvc:interceptor>
		
		<!-- 글 작성자가 로그인한 사람인지 체크 -->
		<mvc:interceptor>
			<mvc:mapping path="/board_delete"/>
			<mvc:mapping path="/board_modify"/>
			<mvc:mapping path="/board_modify_pro"/>
			<bean class="com.test.interceptor.WriterCheckInterceptor"/>
		</mvc:interceptor>
		
	</mvc:interceptors>
	
</beans>